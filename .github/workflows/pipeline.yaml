name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
          cache: 'npm'
          node-version: '16.14'
    # - name: Install dependencies
    #   run: npm install
    - run: npm i
    - run: npm run lint
    - run: npm run build --if-present
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist
    # - run: npm test
  TestUnitario:

    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - uses: actions/setup-node@v3

      with:
        node-version: 16.14
        cache: npm

    - name: Installs dependencias
      run: npm i

    - uses: actions/download-artifact@v3

      with:
        name: dist
        path: dist

    - name: TEST UNITARIO (service)
      run: npm run test

  TestsContainer:

    needs: [build]

    runs-on: ubuntu-latest

    env:

      DB_NAMETESTS: testContainer

      DB_PORT_TEST: 5433

      DB_USERNAME: postgres

      DB_HOST: localhost

      DB_PASSWORD: Complutense123?

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-node@v3

      with:
        node-version: 16.14
        cache: npm

    - name: Install dependencias
      run: npm i

    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: TEST CONTAINER
      run: npm run testcontainer.spec.ts
    






# name: Deployment Pipeline

# on:
#   push:
#     branches: 
#       - master
#   pull_request:
#     branches:
#       - master
#     # types: [opened, synchronize]

# jobs:

  # avoid_reduncy:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Cancel Previous Redundant Builds
  #       uses: styfle/cancel-workflow-action@0.9.1
  #       with:
  #         access_token: ${{ github.token }}

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         cache: 'npm'
  #         node-version: '16.14'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Lint
  #       run: npm run lint

#   build:
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v2
        # with:
        #   fetch-depth: 0
      # - uses: actions/setup-node@v2
      #   with:
      #     cache: 'npm'
      #     node-version: '14'
      # - name: Install dependencies
      #   run: npm install
      # - name: Build
      #   run: npm run build
      # - name: Test
      #   run: npm run test

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: dist
      #     path: dist

  # test:
  #   needs: [lint, build]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '14.2'
  #     - name: Install dependencies
  #       run: npm ci
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: dist
  #         path: dist
  #     - name: Test
  #       run: npm test

  # e2e:
  #   needs: [lint, build]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v2
  #       with:
  #         cache: 'npm'
  #         node-version: '14.2'
  #     - name: Install dependencies
  #       run: npm ci
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: dist
  #         path: dist
  #     - name: E2E tests
  #       uses: cypress-io/github-action@v2
  #       with:
  #         command: npm run test:e2e
  #         start: npm run start-test
  #         wait-on: http://localhost:5000

  # deploy:
  #   needs: [test, e2e]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Deploy to Heroku
  #       if: ${{ github.event_name == 'push' }}
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: ${{secrets.HEROKU_APP}}
  #         heroku_email: ${{secrets.HEROKU_API_EMAIL}}
  #         healthcheck: "https://${{secrets.HEROKU_APP}}.herokuapp.com/health"
  #         rollbackonhealthcheckfailed: true